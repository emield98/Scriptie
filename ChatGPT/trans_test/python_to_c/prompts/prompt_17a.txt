You are a highly skilled competitive programmer with expertise in multiple programming languages. Your task is to translate the following solution from the source language into the target language while keeping the code correct, efficient, and idiomatic

Source Language: Python
"""
# ChatGPT-generated solution will go here.
def main():
    with open("input.txt") as f:
        lines = [line.strip() for line in f if line.strip()]

    # Parse register values
    reg = {'A': 0, 'B': 0, 'C': 0}
    for line in lines:
        if line.startswith("Register"):
            parts = line.split()
            reg_name = parts[1][0]
            reg[reg_name] = int(parts[2])
        elif line.startswith("Program:"):
            program = list(map(int, line.split(":")[1].split(",")))

    def combo_value(op):
        if op <= 3:
            return op
        elif op == 4:
            return reg['A']
        elif op == 5:
            return reg['B']
        elif op == 6:
            return reg['C']
        else:
            raise ValueError("Invalid combo operand")

    output = []
    ip = 0
    while ip < len(program):
        opcode = program[ip]
        if ip + 1 >= len(program):
            break
        operand = program[ip + 1]

        if opcode == 0:  # adv
            denom = 2 ** combo_value(operand)
            reg['A'] = reg['A'] // denom
        elif opcode == 1:  # bxl
            reg['B'] ^= operand
        elif opcode == 2:  # bst
            reg['B'] = combo_value(operand) % 8
        elif opcode == 3:  # jnz
            if reg['A'] != 0:
                ip = operand
                continue
        elif opcode == 4:  # bxc
            reg['B'] ^= reg['C']
        elif opcode == 5:  # out
            output.append(str(combo_value(operand) % 8))
        elif opcode == 6:  # bdv
            denom = 2 ** combo_value(operand)
            reg['B'] = reg['A'] // denom
        elif opcode == 7:  # cdv
            denom = 2 ** combo_value(operand)
            reg['C'] = reg['A'] // denom
        else:
            raise ValueError(f"Unknown opcode: {opcode}")

        ip += 2

    print(",".join(output))

if __name__ == "__main__":
    main()

"""

Target Language: C

Input:
The input will be read from a file named `input.txt` via standard file I/O. Your code should read this input, process it, and print the correct output for the official AoC input.


Output: Only return the C code. Do not include any explanation, comments, or surrounding text.