You are a highly skilled competitive programmer with expertise in multiple programming languages. Your task is to translate the following solution from the source language into the target language while keeping the code correct, efficient, and idiomatic

Source Language: Clojure
"""
;; ChatGPT-generated solution will go here.
(ns output_07b
  (:require [clojure.string :as str]))

(defn parse-line [line]
  (let [[lhs rhs] (str/split line #": ")
        target (parse-long lhs)
        nums (mapv parse-long (str/split rhs #" "))]
    [target nums]))

(defn all-operator-combos [n]
  (if (zero? n)
    [[]]
    (for [op [:+ :* :||]
          rest (all-operator-combos (dec n))]
      (cons op rest))))

(defn apply-op [a b op]
  (case op
    :+ (+ a b)
    :* (* a b)
    :|| (parse-long (str a b))))

(defn eval-left-to-right [nums ops]
  (reduce (fn [acc [op n]] (apply-op acc n op))
          (first nums)
          (map vector ops (rest nums))))

(defn valid-equation? [target nums]
  (let [ops-count (dec (count nums))]
    (some #(= target (eval-left-to-right nums %))
          (all-operator-combos ops-count))))

(defn part [lines]
  (->> lines
       (map parse-line)
       (filter (fn [[target nums]] (valid-equation? target nums)))
       (map first)
       (reduce +)))

(defn -main [& args]
  (let [filename (first args)
        lines (str/split-lines (slurp filename))]
    (println (part lines))))

"""

Target Language: C

Input:
The input will be read from a file named `input.txt` via standard file I/O. Your code should read this input, process it, and print the correct output for the official AoC input.


Output: Only return the C code. Do not include any explanation, comments, or surrounding text.